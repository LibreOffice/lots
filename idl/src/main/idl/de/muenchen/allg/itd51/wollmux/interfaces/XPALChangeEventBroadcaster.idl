/*-
 * #%L
 * WollMux Interfaces
 * %%
 * Copyright (C) 2005 - 2024 Landeshauptstadt München and LibreOffice contributors
 * %%
 * Licensed under the EUPL, Version 1.1 or – as soon they will be
 * approved by the European Commission - subsequent versions of the
 * EUPL (the "Licence");
 *
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at:
 *
 * http://ec.europa.eu/idabc/eupl5
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Licence is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and
 * limitations under the Licence.
 * #L%
 */
#ifndef __de_muenchen_allg_itd51_wollmux_XPALChangeEventBroadcaster_idl__
#define __de_muenchen_allg_itd51_wollmux_XPALChangeEventBroadcaster_idl__

#include "XPALChangeEventListener.idl"

module de {  module muenchen {  module allg { module itd51 { module wollmux { module interfaces {

/**
  Das Interface XPALChangeEventBroadcasteristener definiert einen Broadcaster, der über
  Änderungen an der Persönlichen Absenderliste (PAL) informieren kann. Er enthält
  Methoden zum Registrieren und Deregistrieren von XPALChangeEventListenern.
 */
interface XPALChangeEventBroadcaster
{
    /**
      Diese Methode registriert einen XPALChangeEventListener, der updates
      empfängt wenn sich die PAL ändert. Nach dem Registrieren wird sofort ein
      ON_SELECTION_CHANGED Ereignis ausgelöst, welches dafür sort, dass sofort
      ein erster update aller Listener ausgeführt wird. Die Methode ignoriert
      alle XPALChangeEventListenener-Instanzen, die bereits registriert wurden.
      Mehrfachregistrierung der selben Instanz ist also nicht möglich.
     */
	void addPALChangeEventListener( [in] XPALChangeEventListener listener);

    /**
      Diese Methode registriert einen XPALChangeEventListener, der updates
      empfängt wenn sich die PAL ändert; nach der Registrierung wird geprüft, ob
      der WollMux und der XPALChangeEventListener die selbe WollMux-Konfiguration
      verwenden, wozu der Listener den HashCode wollmuxConfHashCode der aktuellen
      WollMux-Konfiguration übermittelt. Stimmt wollmuxConfHashCode nicht mit dem
      HashCode der WollMux-Konfiguration des WollMux überein, so erscheint ein
      Dialog, der vor möglichen Fehlern warnt. Nach dem Registrieren wird sofort
      ein ON_SELECTION_CHANGED Ereignis ausgelöst, welches dafür sort, dass
      sofort ein erster update aller Listener ausgeführt wird. Die Methode
      ignoriert alle XPALChangeEventListenener-Instanzen, die bereits registriert
      wurden. Mehrfachregistrierung der selben Instanz ist also nicht möglich.

      @param l
               Der zu registrierende XPALChangeEventListener
      @param wollmuxConfHashCode
               Der HashCode der WollMux-Config der zur Konsistenzprüfung
               herangezogen wird und über
               WollMuxFiles.getWollMuxConf().getStringRepresentation().hashCode()
               erzeugt wird.
     */
	void addPALChangeEventListenerWithConsistencyCheck( [in] XPALChangeEventListener listener, [in] long wollmuxConfHashCode);

    /**
      Diese Methode deregistriert einen XPALChangeEventListener wenn er bereits
      registriert war.
     */
	void removePALChangeEventListener( [in] XPALChangeEventListener listener);
};

}; }; }; }; }; };

#endif
